name: dev-release

on:
  push:
    branches:
    - main

env:
  BUILD_TYPE: Release

jobs:
  dev-build-rpm:
    name: "Development Release Rpm"
    runs-on: ubuntu-18.04
    container: centos:7

    steps:
    - name: Install Dependencies
      shell: bash
      run: |
        yum install -y epel-release libaio-devel libcurl-devel openssl-devel libnl3-devel e2fsprogs-devel centos-release-scl
        yum install -y cmake3 git rpm-build devtoolset-7-gcc-c++ make libzstd-static

    - name: Build
      shell: bash
      run: |
        echo git fetching ${{ github.repository }}@${{ github.sha }}
        git clone https://github.com/${{ github.repository }} overlaybd
        cd overlaybd
        git checkout ${{ github.sha }}
        git submodule update --init
        mkdir build
        cd build
        cmake3 .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=0 -DENABLE_DSA=0 -DENABLE_ISAL=0 -DCMAKE_C_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/gcc -DCMAKE_CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/g++
        make -j64
        cpack3

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: release-rpm
        path: overlaybd/build/overlaybd-*.rpm

  dev-build-deb:
    name: "Development Release Deb"
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v3

    - name: Install Dependencies
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libgflags-dev libcurl4-openssl-dev libssl-dev libaio-dev libnl-3-dev libnl-genl-3-dev rpm
        sudo apt-get install -y uuid-dev libjson-c-dev libkmod-dev libsystemd-dev autoconf automake libtool libpci-dev nasm libzstd-dev libext2fs-dev

    - name: Create Build Environment
      run: cmake -E make_directory ${{ github.workspace }}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: |
        git submodule update --init
        cmake ${{ github.workspace }} -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=0 -DENABLE_DSA=0 -DENABLE_ISAL=0

    - name: Build
      working-directory: ${{ github.workspace }}/build
      shell: bash
      run: |
        make -j64
        cpack

    - name: save deb
      uses: actions/upload-artifact@v3
      with:
        name: release-deb
        path: ${{ github.workspace }}/build/overlaybd-*.deb

  dev-release:
    runs-on: ubuntu-20.04
    needs: [dev-build-rpm, dev-build-deb]
    steps:
      - name: Download builds and release notes
        uses: actions/download-artifact@v3
        with:
          path: output
      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Development Build"
          files: |
            output/release-rpm/*.rpm
            output/release-deb/*.deb
